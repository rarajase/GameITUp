<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Word Building Game</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            flex-direction: column;
            align-items: center;
            background-color: #f0f0f0;
            margin: 0;
            padding: 20px;
        }
        #game-container {
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            text-align: center;
            max-width: 400px;
            width: 100%;
        }
        #current-word {
            font-size: 24px;
            margin: 20px 0;
            min-height: 30px;
        }
        #turn-indicator {
            font-size: 18px;
            margin-bottom: 20px;
        }
        #input-container {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
        }
        #letter-input {
            padding: 10px;
            font-size: 16px;
            width: 50px;
            text-transform: uppercase;
            text-align: center;
        }
        #submit-letter {
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 5px;
        }
        #submit-letter:hover {
            background-color: #45a049;
        }
        #message {
            font-size: 16px;
            color: red;
            min-height: 20px;
            margin-bottom: 20px;
        }
        #restart {
            display: none;
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
            background-color: #008CBA;
            color: white;
            border: none;
            border-radius: 5px;
        }
        #restart:hover {
            background-color: #007399;
        }
        canvas {
            position: fixed;
            top: 0;
            left: 0;
            pointer-events: none;
            z-index: 1000;
        }
    </style>
</head>
<body>
    <div id="game-container">
        <h1>Word Building Game</h1>
        <div id="turn-indicator">Player 1's Turn</div>
        <div id="current-word"></div>
        <div id="input-container">
            <input type="text" id="letter-input" maxlength="1" placeholder="A">
            <button id="submit-letter">Add Letter</button>
        </div>
        <div id="message"></div>
        <button id="restart">Restart Game</button>
    </div>
    <canvas id="confetti-canvas"></canvas>

    <script>
        // Dictionary of valid words (including 2, 3, and 4+ letter words)
        const dictionary = ['to', 'bit', 'the', 'fish', 'bird', 'tree', 'house', 'book', 'mouse', 'table', 'chair', 'river'];

        let currentWord = '';
        let currentPlayer = 1;
        let gameOver = false;

        const wordDisplay = document.getElementById('current-word');
        const turnIndicator = document.getElementById('turn-indicator');
        const letterInput = document.getElementById('letter-input');
        const submitButton = document.getElementById('submit-letter');
        const messageDisplay = document.getElementById('message');
        const restartButton = document.getElementById('restart');
        const canvas = document.getElementById('confetti-canvas');
        const ctx = canvas.getContext('2d');

        // Set canvas size
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;

        // Confetti effect
        function createConfetti() {
            const confetti = [];
            for (let i = 0; i < 100; i++) {
                confetti.push({
                    x: Math.random() * canvas.width,
                    y: Math.random() * canvas.height - canvas.height,
                    size: Math.random() * 10 + 5,
                    speed: Math.random() * 5 + 2,
                    color: `hsl(${Math.random() * 360}, 100%, 50%)`
                });
            }
            return confetti;
        }

        function animateConfetti() {
            let confetti = createConfetti();
            function draw() {
                ctx.clearRect(0, 0, canvas.width, canvas.height);
                confetti.forEach(c => {
                    ctx.fillStyle = c.color;
                    ctx.fillRect(c.x, c.y, c.size, c.size);
                    c.y += c.speed;
                    if (c.y > canvas.height) c.y = -c.size;
                });
                if (gameOver) requestAnimationFrame(draw);
            }
            draw();
        }

        function updateTurnIndicator() {
            turnIndicator.textContent = `Player ${currentPlayer}'s Turn`;
        }

        function checkWord(word) {
            // Trigger a loss only if the word is 4 or more letters and in the dictionary
            console.log(`Checking word "${word}", length: ${word.length}`);
            if (word.length >= 4 && dictionary.includes(word.toLowerCase())) {
                console.log(`Found valid 4+ letter word: ${word}`);
                return true;
            }
            console.log(`Not a 4+ letter word, continuing game`);
            return false; // 2 or 3 letter words don't trigger a loss
        }

        function isValidPrefix(word) {
            console.log(`Checking prefix "${word}"`);
            if (word.length === 1) {
                console.log('Single letter, valid prefix');
                return true; // Allow any single letter as a starting point
            }
            const isPrefix = dictionary.some(w => w.startsWith(word.toLowerCase()) && (w.length > word.length || dictionary.includes(word.toLowerCase())));
            console.log(`Is valid prefix: ${isPrefix}`);
            return isPrefix;
        }

        function endGame(message) {
            gameOver = true;
            messageDisplay.textContent = message;
            submitButton.disabled = true;
            letterInput.disabled = true;
            restartButton.style.display = 'block';
            if (message.includes('wins')) {
                animateConfetti();
            }
        }

        submitButton.addEventListener('click', () => {
            if (gameOver) return;
            const letter = letterInput.value.trim().toUpperCase();
            if (!letter.match(/^[A-Z]$/)) {
                messageDisplay.textContent = 'Please enter a single letter (A-Z).';
                return;
            }

            const newWord = currentWord + letter;
            console.log(`New word: ${newWord}, Current player: ${currentPlayer}`);
            if (!isValidPrefix(newWord)) {
                const winner = currentPlayer === 1 ? 2 : 1;
                endGame(`Player ${currentPlayer} made an invalid move with "${newWord}". Player ${winner} wins as they did not lose!`);
                return;
            }

            currentWord = newWord;
            wordDisplay.textContent = currentWord;

            if (checkWord(currentWord)) {
                const winner = currentPlayer === 1 ? 2 : 1;
                endGame(`Player ${currentPlayer} completed "${currentWord}" (a word with 4+ letters). Player ${winner} wins as they did not lose!`);
                return;
            }

            currentPlayer = currentPlayer === 1 ? 2 : 1;
            updateTurnIndicator();
            messageDisplay.textContent = '';
            letterInput.value = '';
            letterInput.focus();
        });

        restartButton.addEventListener('click', () => {
            currentWord = '';
            currentPlayer = 1;
            gameOver = false;
            wordDisplay.textContent = '';
            messageDisplay.textContent = '';
            submitButton.disabled = false;
            letterInput.disabled = false;
            restartButton.style.display = 'none';
            updateTurnIndicator();
            letterInput.focus();
            ctx.clearRect(0, 0, canvas.width, canvas.height);
        });

        letterInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                submitButton.click();
            }
        });

        // Initialize game
        updateTurnIndicator();
        letterInput.focus();
    </script>
</body>
</html>
